name: Integration Tests

on:
  workflow_call:
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

jobs:
  test-ubuntu:
    name: Integration Tests (Ubuntu)
    runs-on: ubuntu-latest
    timeout-minutes: 45
    defaults:
      run:
        shell: bash
    env:
      TF_IN_AUTOMATION: true
      TF_INPUT: false
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.6.6
          terraform_wrapper: false
          
      - name: Cache Terraform dependencies
        uses: actions/cache@v4.2.2
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-
            
      - name: Azure Login
        uses: azure/login@v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Generate Azure credentials file
        run: |
          cat > .auto.tfvars.json << EOF
          {
            "subscription_id": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
            "tenant_id": "${{ secrets.AZURE_TENANT_ID }}",
            "client_id": "${{ secrets.AZURE_CLIENT_ID }}",
            "use_oidc": true
          }
          EOF
          
      - name: Run Terraform tests
        run: |
          terraform init
          terraform test
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true
          TF_VAR_environment: ${{ github.event_name == 'pull_request' && 'pr-' || '' }}${{ github.base_ref }}

  test-windows:
    name: Integration Tests (Windows)
    needs: test-ubuntu
    runs-on: windows-latest
    timeout-minutes: 45
    defaults:
      run:
        shell: pwsh
    env:
      TF_IN_AUTOMATION: true
      TF_INPUT: false
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: 1.6.6
          terraform_wrapper: false
          
      - name: Cache Terraform dependencies
        uses: actions/cache@v4.2.2
        with:
          path: |
            C:\Users\runner\AppData\Local\terraform.d\plugin-cache
            .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-
            
      - name: Azure Login
        uses: azure/login@v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Generate Azure credentials file
        run: |
          @{
            subscription_id = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            tenant_id = "${{ secrets.AZURE_TENANT_ID }}"
            client_id = "${{ secrets.AZURE_CLIENT_ID }}"
            use_oidc = $true
          } | ConvertTo-Json | Set-Content .auto.tfvars.json
          
      - name: Run Terraform tests
        run: |
          terraform init
          terraform test
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true
          TF_VAR_environment: ${{ github.event_name == 'pull_request' && 'pr-' || '' }}${{ github.base_ref }} 